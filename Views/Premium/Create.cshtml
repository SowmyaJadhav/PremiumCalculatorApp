@model PremiumCalculatorApp.ViewModels.UserEditViewModal

@{
    ViewBag.Title = "User";
}
<h2>Premium Calculator</h2>


@using (Html.BeginForm("Create", "Premium", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Please fill the below details to get the monthly premium</h4>
        <hr />
        <div class="form-group">
            @*@Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeathSumInsured, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeathSumInsured, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.DeathSumInsured, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => Model.SelectedOccupationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => Model.SelectedOccupationId, new SelectList(Model.OccupationList, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Occupation", @onchange = "this.form.action='Create'; this.form.submit(); " })
                @Html.ValidationMessageFor(x => x.SelectedOccupationId, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Calculate Premium" class="btn btn-primary" />
            </div>
        </div>
    </div>
}



@section Scripts {
    <script type="text/javascript">
    $(document).ready(function () {
        $("#Occupation").change(function () {
            var selectedOccupationID = { occupationID: $("#OccupationList").val(), age: age, deathSumInsured: deathSumInsured };

            $.ajax({
                url: '@Url.Action("GetMonthlyPremium", "Premium")',
                type: 'Post',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(selectedOccupationID),
                success: function (data) {
                    if (data.success) {
                        $("#MonthlyPremium").val(data.MonthlyPremium);
                    }
                    else {
                        alert('invalid ID' + data.success);
                    }
                }
            });
        });
    });
    </script>
}
